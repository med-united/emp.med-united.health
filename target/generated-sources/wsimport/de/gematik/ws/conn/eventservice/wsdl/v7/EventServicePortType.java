
package de.gematik.ws.conn.eventservice.wsdl.v7;

import java.math.BigInteger;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import de.gematik.ws.conn.cardservice.v8.CardInfoType;
import de.gematik.ws.conn.cardterminalinfo.v8.CardTerminalInfoType;
import de.gematik.ws.conn.connectorcommon.v5.Connector;
import de.gematik.ws.conn.connectorcommon.v5.Status;
import de.gematik.ws.conn.connectorcontext.v2.ContextType;
import de.gematik.ws.conn.eventservice.v7.GetCardTerminals;
import de.gematik.ws.conn.eventservice.v7.GetCardTerminalsResponse;
import de.gematik.ws.conn.eventservice.v7.GetCards;
import de.gematik.ws.conn.eventservice.v7.GetCardsResponse;
import de.gematik.ws.conn.eventservice.v7.GetSubscription;
import de.gematik.ws.conn.eventservice.v7.GetSubscriptionResponse;
import de.gematik.ws.conn.eventservice.v7.SubscriptionType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EventServicePortType", targetNamespace = "http://ws.gematik.de/conn/EventService/WSDL/v7.2")
@XmlSeeAlso({
    de.gematik.ws.conn.eventservice.v7.ObjectFactory.class,
    de.gematik.ws.tel.error.v2.ObjectFactory.class,
    de.gematik.ws.conn.connectorcommon.v5.ObjectFactory.class,
    de.gematik.ws.conn.cardservice.v8.ObjectFactory.class,
    oasis.names.tc.dss._1_0.core.schema.ObjectFactory.class,
    de.gematik.ws.conn.cardterminalinfo.v8.ObjectFactory.class,
    de.gematik.ws._int.version.productinformation.v1.ObjectFactory.class,
    de.gematik.ws.conn.cardservicecommon.v2.ObjectFactory.class,
    de.gematik.ws.conn.connectorcontext.v2.ObjectFactory.class,
    oasis.names.tc.saml._1_0.assertion.ObjectFactory.class,
    org.w3._2000._09.xmldsig_.ObjectFactory.class
})
public interface EventServicePortType {


    /**
     * 
     * @param context
     * @param terminationTime
     * @param subscription
     * @param subscriptionID
     * @param status
     * @throws FaultMessage
     */
    @WebMethod(operationName = "Subscribe", action = "http://ws.gematik.de/conn/EventService/v7.2#Subscribe")
    @RequestWrapper(localName = "Subscribe", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", className = "de.gematik.ws.conn.eventservice.v7.Subscribe")
    @ResponseWrapper(localName = "SubscribeResponse", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", className = "de.gematik.ws.conn.eventservice.v7.SubscribeResponse")
    public void subscribe(
        @WebParam(name = "Context", targetNamespace = "http://ws.gematik.de/conn/ConnectorContext/v2.0")
        ContextType context,
        @WebParam(name = "Subscription", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2")
        SubscriptionType subscription,
        @WebParam(name = "Status", targetNamespace = "http://ws.gematik.de/conn/ConnectorCommon/v5.0", mode = WebParam.Mode.OUT)
        Holder<Status> status,
        @WebParam(name = "SubscriptionID", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", mode = WebParam.Mode.OUT)
        Holder<String> subscriptionID,
        @WebParam(name = "TerminationTime", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", mode = WebParam.Mode.OUT)
        Holder<XMLGregorianCalendar> terminationTime)
        throws FaultMessage
    ;

    /**
     * 
     * @param eventTo
     * @param context
     * @param subscriptionID
     * @return
     *     returns de.gematik.ws.conn.connectorcommon.v5.Status
     * @throws FaultMessage
     */
    @WebMethod(operationName = "Unsubscribe", action = "http://ws.gematik.de/conn/EventService/v7.2#Unsubscribe")
    @WebResult(name = "Status", targetNamespace = "http://ws.gematik.de/conn/ConnectorCommon/v5.0")
    @RequestWrapper(localName = "Unsubscribe", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", className = "de.gematik.ws.conn.eventservice.v7.Unsubscribe")
    @ResponseWrapper(localName = "UnsubscribeResponse", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", className = "de.gematik.ws.conn.eventservice.v7.UnsubscribeResponse")
    public Status unsubscribe(
        @WebParam(name = "Context", targetNamespace = "http://ws.gematik.de/conn/ConnectorContext/v2.0")
        ContextType context,
        @WebParam(name = "SubscriptionID", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2")
        String subscriptionID,
        @WebParam(name = "EventTo", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2")
        String eventTo)
        throws FaultMessage
    ;

    /**
     * 
     * @param parameter
     * @return
     *     returns de.gematik.ws.conn.eventservice.v7.GetSubscriptionResponse
     * @throws FaultMessage
     */
    @WebMethod(operationName = "GetSubscription", action = "http://ws.gematik.de/conn/EventService/v7.2#GetSubscription")
    @WebResult(name = "GetSubscriptionResponse", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", partName = "parameter")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public GetSubscriptionResponse getSubscription(
        @WebParam(name = "GetSubscription", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", partName = "parameter")
        GetSubscription parameter)
        throws FaultMessage
    ;

    /**
     * 
     * @param cardTerminal
     * @param ctId
     * @param iccsn
     * @param connector
     * @param context
     * @param cardHandle
     * @param slotId
     * @param card
     * @param status
     * @throws FaultMessage
     */
    @WebMethod(operationName = "GetResourceInformation", action = "http://ws.gematik.de/conn/EventService/v7.2#GetResourceInformation")
    @RequestWrapper(localName = "GetResourceInformation", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", className = "de.gematik.ws.conn.eventservice.v7.GetResourceInformation")
    @ResponseWrapper(localName = "GetResourceInformationResponse", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", className = "de.gematik.ws.conn.eventservice.v7.GetResourceInformationResponse")
    public void getResourceInformation(
        @WebParam(name = "Context", targetNamespace = "http://ws.gematik.de/conn/ConnectorContext/v2.0")
        ContextType context,
        @WebParam(name = "CtId", targetNamespace = "http://ws.gematik.de/conn/CardServiceCommon/v2.0")
        String ctId,
        @WebParam(name = "SlotId", targetNamespace = "http://ws.gematik.de/conn/CardServiceCommon/v2.0")
        BigInteger slotId,
        @WebParam(name = "Iccsn", targetNamespace = "http://ws.gematik.de/conn/CardServiceCommon/v2.0")
        String iccsn,
        @WebParam(name = "CardHandle", targetNamespace = "http://ws.gematik.de/conn/ConnectorCommon/v5.0")
        String cardHandle,
        @WebParam(name = "Status", targetNamespace = "http://ws.gematik.de/conn/ConnectorCommon/v5.0", mode = WebParam.Mode.OUT)
        Holder<Status> status,
        @WebParam(name = "Card", targetNamespace = "http://ws.gematik.de/conn/CardService/v8.1", mode = WebParam.Mode.OUT)
        Holder<CardInfoType> card,
        @WebParam(name = "CardTerminal", targetNamespace = "http://ws.gematik.de/conn/CardTerminalInfo/v8.0", mode = WebParam.Mode.OUT)
        Holder<CardTerminalInfoType> cardTerminal,
        @WebParam(name = "Connector", targetNamespace = "http://ws.gematik.de/conn/ConnectorCommon/v5.0", mode = WebParam.Mode.OUT)
        Holder<Connector> connector)
        throws FaultMessage
    ;

    /**
     * 
     * @param parameter
     * @return
     *     returns de.gematik.ws.conn.eventservice.v7.GetCardTerminalsResponse
     * @throws FaultMessage
     */
    @WebMethod(operationName = "GetCardTerminals", action = "http://ws.gematik.de/conn/EventService/v7.2#GetCardTerminals")
    @WebResult(name = "GetCardTerminalsResponse", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", partName = "parameter")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public GetCardTerminalsResponse getCardTerminals(
        @WebParam(name = "GetCardTerminals", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", partName = "parameter")
        GetCardTerminals parameter)
        throws FaultMessage
    ;

    /**
     * 
     * @param parameter
     * @return
     *     returns de.gematik.ws.conn.eventservice.v7.GetCardsResponse
     * @throws FaultMessage
     */
    @WebMethod(operationName = "GetCards", action = "http://ws.gematik.de/conn/EventService/v7.2#GetCards")
    @WebResult(name = "GetCardsResponse", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", partName = "parameter")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public GetCardsResponse getCards(
        @WebParam(name = "GetCards", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", partName = "parameter")
        GetCards parameter)
        throws FaultMessage
    ;

    /**
     * 
     * @param context
     * @param subscribeRenewals
     * @param subscriptionID
     * @param status
     * @throws FaultMessage
     */
    @WebMethod(operationName = "RenewSubscriptions", action = "http://ws.gematik.de/conn/EventService/v7.2#RenewSubscriptions")
    @RequestWrapper(localName = "RenewSubscriptions", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", className = "de.gematik.ws.conn.eventservice.v7.RenewSubscriptions")
    @ResponseWrapper(localName = "RenewSubscriptionsResponse", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", className = "de.gematik.ws.conn.eventservice.v7.RenewSubscriptionsResponse")
    public void renewSubscriptions(
        @WebParam(name = "Context", targetNamespace = "http://ws.gematik.de/conn/ConnectorContext/v2.0")
        ContextType context,
        @WebParam(name = "SubscriptionID", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2")
        List<String> subscriptionID,
        @WebParam(name = "Status", targetNamespace = "http://ws.gematik.de/conn/ConnectorCommon/v5.0", mode = WebParam.Mode.OUT)
        Holder<Status> status,
        @WebParam(name = "SubscribeRenewals", targetNamespace = "http://ws.gematik.de/conn/EventService/v7.2", mode = WebParam.Mode.OUT)
        Holder<de.gematik.ws.conn.eventservice.v7.RenewSubscriptionsResponse.SubscribeRenewals> subscribeRenewals)
        throws FaultMessage
    ;

}
